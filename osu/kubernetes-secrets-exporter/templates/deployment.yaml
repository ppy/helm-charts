apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubernetes-secrets-exporter.fullname" . }}
  labels:
    {{- include "kubernetes-secrets-exporter.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kubernetes-secrets-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubernetes-secrets-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubernetes-secrets-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if eq .Values.server.listenMode "https" }}
      volumes:
        - name: ca-certs
          secret:
            secretName: {{ include "kubernetes-secrets-exporter.fullname" $ }}-ca
        - name: tls-certs
          secret:
            secretName: {{ .Values.server.https.certificate.existingSecret | default (printf "%s-tls" (include "kubernetes-secrets-exporter.fullname" $)) }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          {{- if eq .Values.server.listenMode "http" }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- else }}
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: LISTEN_MODE
              value: {{ .Values.server.listenMode }}
            {{- with .Values.server.trustProxy }}
            - name: TRUST_PROXY
              value: {{ . | toString }}
            {{- end }}
            - name: CONFIGMAP_NAME
              value: {{ include "kubernetes-secrets-exporter.fullname" . }}
            {{- if eq .Values.server.listenMode "http" }}
            - name: SSL_CLIENT_SUBJECT_HEADER
              value: {{ .Values.server.http.commonNameHeader }}
            {{- end }}
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if eq .Values.server.listenMode "https" }}
          volumeMounts:
            - name: ca-certs
              mountPath: /ca-certs
              readOnly: true
            - name: tls-certs
              mountPath: /tls-certs
              readOnly: true
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
